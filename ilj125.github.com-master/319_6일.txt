오늘 공부 할 것
1.배열(array)
;하나의 변수명을로 여러개의 값을 다루고 싶습니다.

-배열 선언 순서
(배열 int 형 변수 이름은 kor로 5개의 kor 변수 배열을 만들고 싶다.)
 (1)변수 선언 
:stack에 int형 배열 kor의 메모리와 주소를 생성한다.
  i) int [] kor; //전문가는 i)형태를 더 좋아함 왜냐하면 int형 배열 kor 이라고 쭉 읽을 수 있어서
 ii) int kor [];
 
(2)객체 생성 ; 배열은 참조형이기에 객체를 생성 해줘야 한다. //객체 =
:stack에서 생성한  kor 메모리의 주소와 같은 주소로 heap 메모리 영역에   int형으로 5개 객체메모리 생성
   kor = new int[5]; //객체 생성시에 배열이 몇개인지 꼬옥 알려줘야 한다.

(3)데이터 입력;
//배열은 0부터 시작
kor[0] = 80 ;//이런 식으로kor[0]~ kor[4]까지 5개 입력 

(4)생략과 동시입력
변수 선언 + 객체 생성
int [ ] kor = new int [5];
변수 선언 + 객체 생성 + 데이터값 지정
int[ ] kor = {30,40,50,20,10};


(5)다중 배열 (lotto2 문제)
(lotto2 , 6개 숫자를 5줄 표현)
int [ ][ ]lotto =new int[5][6] // 6개 짜리 배열이 5개 있음 5행 6열 느낌으로 생각
-lotto.length=5
-lotto[i].length=6
//lotto[0].length=6, lotto[1].length=6 이런 느낌 

2.Bubble 정렬을 이해하기
-int num [ ] = new int num[10]; 즉 숫자 변수가 10개 있습니다.
1)num[0] vs num[1] 비교후 큰 값을 num[1]로
2)num[1] vs num[2] 비교후 큰 값을 num[2]로
3)계속 진행 하면 맨 끝에 수가 제일 크다.
4)맨 끝에수가 젤 크니 맨 끝에수 제외하고 다시 num[0]부터 num[10-1] 까지 비교   

----------------------------------------------------------------
*stack에 잡히는 메모리는 초기화가 안된다. 

*heap에 즉 객체메모리에 저장되는 변수(참조형)는 자동 초기화가 된다. 
 -기본타입(정수)형 데이터 배열의 초기 값 = 0  
 -
 //short byte int long 

*초기화 : 메모리 확보하자 마자 값을 집어 넣는거 

*배열이름.leght ; 배열의 길이 즉 갯수 

*참조형 :class, 배열
-참조형은 new와 같이 쓰이는데 new를 만나면 객체메모리 즉 heap에 객체메모리를 생성해야한다. 객체메모리에 데이터 저장

*Inser-sort , Select-sort, 생활 코딩 홈페이지 들어가서  데이터 정렬을 공부 해야 합니다. 

*Math.random() //Math라는 클래스 안에 랜덤 숫자를 넣어줌 
 -> 0<=x<1 중에서 랜덤으로 숫자 지정 ex) 0.9898989333 등

*Math.random()*10 //0.95453 * 10을 하면 9.5453이 된다. 즉 0<=x<10사이 숫자가 된다.
->(int)((Math.random()*10)+1) double 형태였던 random이 정수부분만 짜른다.

*string & string Buffer 
;둘다 string 문자열을 받는 메소드다.
;stringbuffer를 쓰는 이유는 string은 데이터 값이 변할 때마다 새로운 메모리를 만든다. 이전의 있던 데이터값이 든 메모리는 쓰레기가 된다.
 string의 값을 변화 시킬 수록 쓰레기가 늘어서 속도가 늦어진다.
;stringbuffer는 데이터 값이 변화 되면 객체생성된 메모리값 안에서 변화가 된다. 새로 만들지 않는다. 그래서 쓰레기가 안생기고 속도가 string 보다 빠르다.

*stringBuffer 
-stringBuffer데이터형 선언 후 데이터값 입력
StringBuffer sb = new StringBuffer("행복한");
-stringBuffer 값에 추가 해줄 때는 append를 사용
sb.append("목요일");
-stringBuffer 값 출력은 sb만 하면 된다.

*String은 일반형 데이터 (int, double..등) 처럼 입력 받을 수있는 특권을가지고 있다. (자주 써서)
 - + 연산자로 문장을 잇는것도 가능
 -선언도 string 변수이름 = ""; 처럼 간편하게 
 -하지만 조합형, 객체메모리(heap)을 설정해 줘야한다는 것은 잊지말자.

*Enum (b_useful package에 저장)
 :개발자가 소스 읽기 편하라고 개발 
 :ex) SMALL, MEDIUPM, LARGE, EXTRARARGE 
-Enum 선언 
enum Size{
	SMALL,	
	MEDIUM, 
	LARGE, 
	EXTRA_LARGE }
//enum을 쓸 경우 1.이 SMALL인지 MEDIUMM인지 모름 자바만 알고있다. 그래서 1번 2번 못쓰고 직접 SMALL이라 입력해야함
-Enum 값 저장 
Size size = Size.EXTRA_LARGE; 
//size라는 enum형태의 Size 자료형 변수에 ,Size enum자료형에 EXTRA_LARGE를 대입해줄게
switch( size ) {
		case SMALL 		
		case MEDIUM 	
		case LARGE 	
		case EXTRA_LARGE }






